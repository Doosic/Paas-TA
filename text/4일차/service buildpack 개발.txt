
	* Custom Buildpack 개발
	
		빌드팩은 애플리케이션 구동에 필요한 환경(런타임, 컨테이너, 프레임워크 등)을
		조립하고 드롭릿을 구성하는 스크립트의 모음
		
		- 빌드팩은 개방형 클라우드 플랫폼의 요청에 의해 동작
		- 빌드팩 개발자는 개방형 클라우드 플랫폼과의 연동을 위해 3개의 스크립트(검출,컴파일,릴리즈)를 필수로 구현
		- API는 쉘스크립트로 작성하며 실 동작부분의 개발언어에 대한 제약사항은 없다.
		  
		

		- 필수기능 (검출, 컴파일, 릴리즈)
		
			* 검출 (Detect)
			배포되는 애플리케이션의 런타임 환경 구성 방법을 빌드팩이
			아는지 여부를 확인하는 기능
			
			1.검출 스크립트에는 빌드팩의 적용 가능성(스테이지 할 수 있는지)을 검사하는 내용을 작성
			2.빌드팩의 적용 가능성은 일반적으로 특정 파일의 존재 여부로 판단
			
			동작설명
			$ bin/detect BUILD_DIR
			1.검출 스크립트를 호출할 때 전달되는 인자 값은 빌드 디렉터리
			2.빌드 디렉터리는 애플리케이션 파일들이 위치한 디렉터리로써 스크립트는 파일들을
			  검사하여 빌드팩 적용 여부를 결정
			3.배포하는 애플리케이션이 빌드팩에서 지원하는 유형이라면 '0' 종료값을 리턴
			4.스크립트가 '0'을 리턴하면 검출된 환경의 이름을 사용자에게 출력 
			
			
			* 컴파일 (Compile)
			컴파일은 실질적으로 드롭릿을 빌드하는 빌드팩의 핵심기능
			
			1.컴파일 스크립트에는 애플리케이션 구동 시 필요한 바이너리들을 다운로드 및
			  설치하고, 이를 드롭릿 파일시스템에 배치시키는 내용을 작성
			2.애플리케이션 구동에 필요한 바이너리들의 예로는 런타임(JRE, PHP, RUBY등...), 웹컨테이너(톰켓, 제이보스 등..) 가 있다.
			
			동작설명
			$ bin/compile BUILD_DIR CACHE_DIR
			1.컴파일 스크립트를 호출할 때 전달되는 인자 값 2개는 빌드 디렉터리와 캐시 디렉터리
			2.캐시 디렉터리는 빌드팩 컴파일 프로세스 동안 다운로드 하는 종속성들을 임시로 저장하는데 사용할 수 있다.
			3.스크립트 실행 중 사용자에게 컴파일 과정을 출력 
			
			
			* 릴리즈 (Release)
			릴리즈는 애플리케이션 실행방법에 대한 정보를 플랫폼에
			응답해주는 기능을 한다.
			
			릴리즈 스크립트에는 플랫폼에 응답할 정보를 생성하는 내용을 작성
			
			동작설명
			$bin/release BUILD_DIR
			1.릴리즈 스크립트를 홀출할 때 전달되는 인자 값은 빌드 디렉터리
			2.실행방법 정보는 반드시 아래와 같은 포맷의 yaml로 제공해야한다.
			
		
		- 부가기능
			
			- 빌드팩은 컴파일 시 애플리케이션 구동을 위해 필요한 종속성들을 설치한다.
			- 기본적으로 빌드팩은 이러한 종속성을 네트워크를 통해 다운로드하기 때문에
			  네트워크가 단절된 환경에서의 사용에 제약이 있다.
			- 따라서 빌드팩 개발 시 개방형 클라우드 플랫폼이 설치되는 환경에 대해서도
			  고려할 필요가 있다.
			  
			
			* 패키지
			패키지는 빌드팩을 하나의 압축파일로 만드는 기능 혹은
			압출파일 자체를 의미
			
			빌드팩 패키지의 목적
			1.시스템 빌드팩으로 등록 가능한 형태로 만드는 것
			2.네트워크가 단절된 환경에서 빌드팩 컴파일을 지원하는 것
			
			개발자는 이를 위해 빌드팩에 패키징 및 버저닝 패키지 기능들을 추가로 구현 할 수 있다.
			
			패키징 기능
			1.온라인 패키징 컴파일 시 네트워크에 접속하여 종속성들을 다운로드
			2.오프라인 패키징 패키지시 지원하는 종속성들을 모두 패키지 안에 포함
			
			버저닝 기능
			1.빌드팩 패키징 시 생성 할 패키지 이름에 버전 정보를 추가하는 기능
			
			패키지를 지원하기 위해서는 패키징과 버저닝 기능을 직접 구현하거나 PaaS-TA에서 제공하는
			Buildpack packager애플리케이션을 사용하는 방법이 있다.
			
		
			* 직접 구현하는 예)
			패키지는 bundle exec rake[^7] 명령어를 통해 수행된다.
			인자 값으로 OFFLINE=true 를 사용하면 오프라인 패키지를 생성하고
			VERSION=<VERSION> 인자 값을 사용하면 패키지 이름에 버전 정보를 추가
			
			\$bundle install
			\$bundle exec rake package OFFLINE=true VERSION=2.1
			\$Creating build/java-buildpack-offline-2.1.zip
			
			
			
			
		실기는 bosh 와 cf 명령어 위주로 보니까 외우고 배포하는거 좀 만 더 연습해보면 충분히 가능할듯!
			
		  
		 