=================================================================================================================
개발환경
=================================================================================================================
VMware Player 설치
https://www.vmware.com/kr/products/workstation-player/workstation-player-evaluation.html
여기에서 16.0. 버전을 다운로드 및 설치함

ubuntu 설치
https://releases.ubuntu.com/18.04.5/?_ga=2.158996730.1931960103.1599736552-1888727197.1599548933

SSH Server 설치
terminal => sudo apt install openssh-server


=================================================================================================================
동영상 3일차에서 2. cli  에서 39분 15초 동영상 부분에서 
http://45.248.73.44/index.php/s/22CLKNHsyPpwsyS
--> 위 다운로드 주소가 아래 주소로 변경되었으며 여기서 다운로드 받으셔야 합니다.
https://nextcloud.paas-ta.org/index.php/s/TCE6Toiirya6kMD/download


=================================================================================================================
Bosh VM 배포
=================================================================================================================
* 1번
PaaS-TA 설치 파일 다운로드
sudo apt install curl
mkdir workspace 
cd workspace 
curl -Lo paasta-5.5.zip https://nextcloud.paas-ta.org/index.php/s/ARmoNN83XGgt2gg/download 
unzip paasta-5.5.zip 
zip파일을 정상적으로 풀렸는지 확인 후
rm paasta-5.5.zip   (zip 파일이 약 8.4GB 용량을 차지하므로 향후 파스-타 설치 후 vboxmange 로 save 정상적 수행 및 bosh 와 paasta 가 기동시 깨지지 않도록 하기 위함) 


* 2번
Bosh 설치
curl -Lo ./bosh https://s3.amazonaws.com/bosh-cli-artifacts/bosh-cli-6.1.0-linux-amd64  
chmod +x ./bosh  
sudo mv ./bosh /usr/local/bin/bosh  
bosh -v 

* 3번
종속성 파일 설치
sudo apt-get install -y build-essential zlibc zlib1g-dev ruby ruby-dev openssl libxslt1-dev libxml2-dev libssl-dev libreadline7 libreadline-dev libyaml-dev libsqlite3-dev sqlite3  

* 4번
VirtualBox 6.0 설치
sudo apt update
sudo apt upgrade 
wget -q https://www.virtualbox.org/download/oracle_vbox_2016.asc -O- | sudo apt-key add -
wget -q https://www.virtualbox.org/download/oracle_vbox.asc -O- | sudo apt-key add -
sudo add-apt-repository "deb http://download.virtualbox.org/virtualbox/debian bionic contrib" 
sudo apt update
sudo apt install virtualbox-6.0 
VBoxManage --version 

* 5번
Deploy Bosh VM
++++++ 해당 명령어 미 진행시 에러 발생 꼭 하셈... 에러 발생됐다.
rm ~/workspace/paasta-5.5/deployment/bosh-deployment/warden/creds.yml
++++++++++
cd ~/workspace/paasta-5.5/deployment/bosh-deployment
chmod 755 *.sh
./deploy-bosh-lite.sh

* 6번

Alias 설정
bosh alias-env micro-bosh -e 10.0.1.6 --ca-cert <(bosh int warden/creds.yml --path /director_ssl/ca) 
-------------------------------------------------------------------------------------------------------------------
* 7번 로그인 관련

Bosh login 쉘 스크립트 생성
vi login.sh
#!/usr/bin

export BOSH_CA_CERT=$(bosh int ./warden/creds.yml --path /director_ssl/ca)
export BOSH_CLIENT=admin
export BOSH_CLIENT_SECRET=$(bosh int ./warden/creds.yml --path /admin_password) 

Bosh login 쉘 적용
source login.sh

Bosh login 확인
bosh -e micro-bosh env
-----------------------------------------------------------------------------------------------------------
* 8번 로그인 관련 (시험문제로 나온다고 한다. 이거 생성방법 외워둬야 한다.)

jumpbox key 생성 (Bosh VM 로그인 용) 
bosh int warden/creds.yml --path /jumpbox_ssh/private_key > jumpbox.key 
chmod 600 jumpbox.key
ssh jumpbox@10.0.1.6 -i jumpbox.key (-i 옵션은 jumpbox.key 로 확인하라는 옵션이다.)

--------------------------------------------------------------------------------------------------------------------
Bosh로 배포된 프로그램 process 확인 (bosh vm or paas-ta vm ssh 접속 후 이용)
sudo su
monit summary (프로세스 모니터링 명령어)
monit stop 프로세스이름 (프로세스 중지stop 및 시작가능start)
-----------------------------------------------------------------------------------------------------------------------
credhub cli 설치
cd ~
wget https://github.com/cloudfoundry-incubator/credhub-cli/releases/download/2.0.0/credhub-linux-2.0.0.tgz
tar -xvf credhub-linux-2.0.0.tgz
chmod +x credhub 
sudo mv credhub /usr/local/bin/credhub 
credhub --version

credhub 도 로그인이 필요하다 안할시 (Server Version: Not Found. Have you targeted and authenticated against a CredHub server?) 오류발생
----------------------------------------------------------------------------------------------------------------------------
credhub shell 생성
cd ~/workspace/paasta-5.5/deployment/bosh-deployment
vi credhub_login.sh

#!/usr/bin

export CREDHUB_CLIENT=credhub-admin 
export CREDHUB_SECRET=$(bosh int --path /credhub_admin_client_secret warden/creds.yml) 
export CREDHUB_CA_CERT=$(bosh int --path /credhub_tls/ca warden/creds.yml) 

credhub shell  쉘 적용cd 
cd ~/workspace/paasta-5.5/deployment/bosh-deployment
source credhub_login.sh

credhub 로그인
credhub login -s https://10.0.1.6:8844 --skip-tls-validation 
credhub --version
credhub find



**********************************************************************************************************************************************************
vbox 환경저장 (종료는 항상 이 명령어로 해야함)
cd ~/workspace/paasta-5.5/deployment/bosh-deployment 경로 이동 후 vboxmanage controlvm $(bosh int warden/state.json --path /current_vm_cid) savestate

해당 경로로 이동후 실행 저장 및 복구를 실행해야 한다.
cd ~/workspace/paasta-5.5/deployment/bosh-deployment

Virtual Box vm 복구
vboxmanage startvm $(bosh int warden/state.json --path /current_vm_cid) --type headless

Virtual Box vm 저장 (종료 시 필수)
vboxmanage controlvm $(bosh int warden/state.json --path /current_vm_cid) savestate
 
*************************************************************************************************************************************************************
=================================================================================================================
PaaS-TA 배포
=================================================================================================================
해당 경로로 이동후 실행 저장 및 복구를 실행해야 한다.
cd ~/workspace/paasta-5.5/deployment/bosh-deployment
 
Virtual Box vm 복구
vboxmanage startvm $(bosh int warden/state.json --path /current_vm_cid) --type headless

Virtual Box vm 저장 (종료 시 필수)
vboxmanage controlvm $(bosh int warden/state.json --path /current_vm_cid) savestate
----------------------------------------------------------------------------------------
* 9번 bosh 로그인 관련

Bosh login
cd ~/workspace/paasta-5.5/deployment/bosh-deployment
source login.sh
bosh -e micro-bosh env (로그인 확인 명령어)

update cloud config (bosh-lite-cloud-config.yml 수정 필요)
cd ~/workspace/paasta-5.5/deployment/cloud-config
vi bosh-lite-cloud-config.yml
===========================================
asis
  - disk_size: 30720

tobe
- disk_size: 30720
===========================================
bosh -e micro-bosh update-cloud-config bosh-lite-cloud-config.yml

runtime config 등록
cd ~/workspace/paasta-5.5/deployment/bosh-deployment
./update-runtime-config.sh
bosh -e micro-bosh configs


stemcell 등록
cd ~/workspace/paasta-5.5/stemcell/paasta
bosh -e micro-bosh upload-stemcell bosh-stemcell-315.64-warden-boshlite-ubuntu-xenial-go_agent.tgz
bosh -e micro-bosh stemcells

PaaS-TA 배포
cd ~/workspace/paasta-5.5/deployment/paasta-deployment
chmod +x ./*.sh
vi deploy-bosh-lite.sh
===========================================
as-is
bosh -d paasta -n deploy paasta-deployment.yml

to-be
bosh -e micro-bosh -d paasta -n deploy paasta-deployment.yml
===========================================
./deploy-bosh-lite.sh

IP route 설정 (bosh-lite를 이용할때)
sudo ip route add   10.244.0.0/16 via 10.0.1.6

=================================================================================================================


=================================================================================================================
기타 실습
=================================================================================================================
기타 알아두어야 할 Bosh 명령어들
bosh -e micro-bosh instances 
bosh -e micro-bosh env --details
bosh -e micro-bosh stemcells 
bosh -e micro-bosh releases 버전정보
bosh -e micro-bosh tasks --recent 실행중인 소프트웨어 정보 --recent 옵션 사용 시 
bosh -e micro-bosh locks 실행도중 Lcok이 걸린 task 찾기
bosh -e micro-bosh cancel-task 123 ID값으로 task 찾기
bosh -e micro-bosh -d paasta vms --vitals vm 상태 확인
bosh -e micro-bosh -d paasta vms 파스타에 설치된 VM 정보 확인  
bosh -e micro-bosh -d paasta ssh api API VM에 로그인 (다중 구성인 경우 api 뒤에 ex (ID) : api/65106fca-ad70-4003-b831-98069bcdd159를 입력하면 됨) 로그인 후 sudo su

cd /var/vcap/sys/log 경로에 설치한 프로세스 로그 확인 가능
cd /var/vcap/jobs 링크된 부분 확인 가능
cd /var/vcap/instance 에이전트 정보 확인
cd /var/vcap/data Paas-Ta 설치할때 릴리즈에 대한 설치 정보, 로그를 확인할 수 있음



cf-cli 설치
wget -q -O - https://packages.cloudfoundry.org/debian/cli.cloudfoundry.org.key | sudo apt-key add -
echo "deb https://packages.cloudfoundry.org/debian stable main" | sudo tee /etc/apt/sources.list.d/cloudfoundry-cli.list
sudo apt update
sudo apt install cf-cli
cf -v

cf login
cf login --skip-ssl-validation  (명령 수행 후 API Endpoit :  이 뜨면 아래 https://api.10.244.0.34.nip.io 를 입력한다)
https://api.10.244.0.34.nip.io
admin/admin

Email : paasta_trainee25
Password : trainee25


user 생성
cf create-user edu-user user

org생성
cf create-org edu-org
cf orgs

space
cf create-space -o edu-org edu-space
cf target -o edu-org -s edu-space  (아니면 cf target -o edu-org)
cf spaces

org role 설정
cf set-org-role edu-user edu-org OrgManager

space role 설정
cf set-space-role edu-user edu-org edu-space SpaceDeveloper

java8  설치
sudo apt update
sudo apt install openjdk-8-jdk
java -version

git 설치
sudo apt install git
git --version

spring-music 다운로드 및 빌드
cd ~/workspace
git clone https://github.com/cloudfoundry-samples/spring-music
cd spring-music/
./gradlew clean assemble

manifest 수정
vi manifest.yml

cf target 변경
cf target -o edu-org -s edu-space

spring-music 배포
cf push
cf apps

로그 확인
cf app spring-music
cf logs spring-music
cf logs spring-music --recent

cf를 이용한 ssh 터널링
cf ssh welcome-cf -L 9999:10.10.4.14:3306



==========================================================
3일차 교육에서  welcome-cf 다운로드 주소 변경
==========================================================

welcome-cf 다운로드 주소
https://nextcloud.paas-ta.org/index.php/s/TCE6Toiirya6kMD/download
